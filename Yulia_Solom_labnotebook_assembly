#linux training:
zgrep - find in .gz
locate fasta - find everywhere
cp {*.txt, *.log} test/ - copy in directiey test
cat hi.txt ha.txt > combined-rl.txt - combine files
chmod 700 hi.txt - make it executableq
grep -oi "product=.*" scaffolds.ffn | grep -v "hypothetical" | sed "s/product=//"
./assembled.sh - create your own script
jobs - which jobs?






#SPAdes 3.15.5(Bankevich et al., 2012) together with QUAST (N50, maximum contig length, GC %, genes found in a reference, etc.)(Gurevich et al., 2013)
#https://currentprotocols.onlinelibrary.wiley.com/doi/abs/10.1002/cpbi.102


#Illumina reads from the TY2482 sample
#Lets investigate the evolutionary origins and pathogenic potential!
# we will determine which other strain(s) it is most similar to in an effort to determine how it could have arisen. 
#what new genes it possesses for pathogenicity, and how it evolved these new functions (maybe plasmids? phages?)

#spades uses contigs and  information about the distances between reads within read-pairs


conda install -c bioconda spades
spades.py --test  #yes it works

#1.fastqc:

mkdir -p srr_data
cd srr_data/
mkdir -p SRR292678_470kb_paired
cd SRR292678_470kb_paired
wget https://d28rh4a8wq0iu5.cloudfront.net/bioinfo/SRR292678sub_S1_L001_R1_001.fastq.gz
wget https://d28rh4a8wq0iu5.cloudfront.net/bioinfo/SRR292678sub_S1_L001_R2_001.fastq.gz
gunzip *.gz

 
mkdir -p SRR292770_6kb_mate
wget https://d28rh4a8wq0iu5.cloudfront.net/bioinfo/SRR292770_S1_L001_R2_001.fastq.gz
wget https://d28rh4a8wq0iu5.cloudfront.net/bioinfo/SRR292770_S1_L001_R1_001.fastq.gz
gunzip *.gz


mkdir -p SRR292862_2kb_mate
wget https://d28rh4a8wq0iu5.cloudfront.net/bioinfo/SRR292862_S2_L001_R1_001.fastq.qz
wget https://d28rh4a8wq0iu5.cloudfront.net/bioinfo/SRR292862_S2_L001_R1_001.fastq.qz
gunzip *.gz

cd ../
fastqc -o . /home/iuliiasolomennikova/srr_data/SRR292862_2kb_mate/SRR292862_S2_L001_R1_001.fastq /home/iuliiasolomennikova/srr_data/SRR292862_2kb_mate/SRR292862_S2_L001_R2_001.fastq
fastqc -o . /home/iuliiasolomennikova/srr_data/SRR292770_6kb_mate/SRR292770_S1_L001_R1_001.fastq /home/iuliiasolomennikova/srr_data/SRR292770_6kb_mate/SRR292770_S1_L001_R2_001.fastq
fastqc -o . /home/iuliiasolomennikova/srr_data/SRR292678_470kb_paired/SRR292678sub_S1_L001_R1_001.fastq /home/iuliiasolomennikova/srr_data/SRR292678_470kb_paired/SRR292678sub_S1_L001_R2_

#2. K-mer profile and genome size estimation (http://www.cbcb.umd.edu/software/jellyfish/)
conda install -c conda-forge jellyfish
jellyfish count -t 8 -C -m 31 -s 1G -o spec_6kb_31mer --min-quality=20 --quality-start=33 *.fastq
#and do the same with all sequences


#3. Assembly
spades.py -o output -1 SRR292862_S2_L001_R1_001.fastq SRR292862_S2_L001_R1_002.fastq

#3.1.quast (ibrary type: paired-end)
conda activate quast_tool

quast.py -o q_repo -t 16 scaffolds.fasta
fgrep -c '>' scaffolds.fasta 
fgrep -c '>' contigs.fasta 
#372 scaffolds, 221 contigs
#see 3 step quast_rep


#3a (Optional, 1 extra credit). Effect of read correction - Repeat the k-mer profile plotting step

#4. Impact of reads with large insert size

quast.py -o quast_repo -t 16 scaffolds.fasta
fgrep -c '>' scaffolds.fasta #==327 fragments 
fgrep -c '>'contigs.fasta    #== 90
mkdir 4_step_all_quast_repo
quast.py -o 4_step_all_quast_repo -t 16 scaffolds.fasta

#5. Genome Annotation(prokka - rapid bacterial genome annotation)
prokka scaffolds.fasta --outdir prokka_ex_res
#organism: Genus species strain 
#contigs: 205
#bases: 5424432
#gene: 5144
#tRNA: 79
#tmRNA: 1
#repeat_region: 1
#CDS: 5064


#6. Finding the closest relative of E. coli X
# Barrnap

barrnap scaffolds.fna < new_bact

#for blast: >PROKKA_00001 Putative deoxyribonuclease RhsC (in .ffn)
 
 
#7.Mauve



#8. RAST




#9. ResFinder
















 








